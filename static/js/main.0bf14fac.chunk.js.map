{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/icon.svg","images/no-img.png"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","MyButton","_ref","children","onClick","tip","btnClassName","tipClassName","react_default","a","createElement","Tooltip_default","title","className","placement","IconButton_default","clearErrors","PostScream","open","body","handleOpen","_this","setState","handleClose","props","handleChange","event","defineProperty","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","_this$props","classes","react","Add_default","Dialog_default","onClose","fullWidth","maxWidth","closeButton","Close_default","DialogTitle_default","DialogContent_default","onSubmit","TextField_default","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button_default","variant","color","submitButton","disabled","CircularProgress_default","size","progressSpinner","Component","connect","newScream","post","response","withStyles","theme","position","float","marginTop","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationId","markNotificationsRead","notificationsIcon","_this2","dayjs","extend","relativeTime","Badge_default","badgeContent","Notifications_default","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","Favorite_default","style","marginRight","Chat_default","MenuItem_default","key","Typography_default","component","Link","to","recipient","sender","aria-owns","aria-haspopup","Menu_default","Boolean","onEntered","notificationIds","Navbar","AppBar_default","Toolbar_default","react_router_dom","src","AppIcon","width","alt","scream_PostScream","layout_Notifications","Home_default","aria-label","aria-controls","AccountCircle_default","rest","objectWithoutProperties","react_router","assign","render","DeleteScream","deleteScream","deleteButton","DeleteOutline_default","DialogActions_default","delete","LikeButton","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","likedScream","find","likeScream","unlikeScream","inherits","createClass","FavoriteBorder_default","mapActionsToProps","Comments","Grid_default","container","comment","userImage","item","sm","commentImage","commentData","format","invisibleSeparator","variabnt","visibleSeparator","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","_this$props2","_this$props2$scream","likeCount","commentCount","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","scream_LikeButton","scream_CommentForm","scream_Comments","expandButton","UnfoldMore_default","dialogContent","padding","marginBottom","Scream","_this$props$scream","_this$props$user","scream_DeleteScream","Card_default","card","CardMedia_default","image","CardContent_default","content","scream_ScreamDialog","display","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","Edit_default","tpye","backgroundColor","palette","primary","main","margin","fullLine","halfLine","Paper_default","paper","profile","NoImg","LocationOn_default","Link_default","CalendarToday_default","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","_this$props$user$cred","imageUrl","util_ProfileSkeleton","id","hidden","core_Link_default","href","rel","KeyboardReturn_default","profile_EditDetails","align","buttons","cardContent","flexDirection","cover","date","from","home","getScreams","_this$props$data","recentScreamsMarkup","util_ScreamSkeleton","scream_Scream","xs","profile_Profile","login","userData","email","password","loginUser","form","pageTitle","noValidate","general","customError","progress","push","signup","newUserData","confirmPassword","signupUser","_props$profile","screamIdParam","match","params","screamsMarkup","profile_StaticProfile","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","fontSize","border","borderBottom","& .image-wrapper","& button","& .profile-image","& .profile-details","& span, svg","verticalAlign","& a","& hr","& svg.button","&:hover","cursor","baseURL","jwtDecode","exp","Date","now","App","MuiThemeProvider_default","es","layout_Navbar","exact","path","util_AuthRoute","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0bf14fac.chunk.js","sourcesContent":["import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId\r\n          }\r\n        ]\r\n      };\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(\r\n          (like) => like.screamId !== action.payload.screamId\r\n        )\r\n      };\r\n    case MARK_NOTIFICATIONS_READ:\r\n      state.notifications.forEach((not) => (not.read = true));\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_SCREAMS,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  LOADING_DATA,\r\n  DELETE_SCREAM,\r\n  POST_SCREAM,\r\n  SET_SCREAM,\r\n  SUBMIT_COMMENT\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  screams: [],\r\n  scream: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case SET_SCREAMS:\r\n      return {\r\n        ...state,\r\n        screams: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_SCREAM:\r\n      return {\r\n        ...state,\r\n        scream: action.payload\r\n      };\r\n    case LIKE_SCREAM:\r\n    case UNLIKE_SCREAM:\r\n      let index = state.screams.findIndex(\r\n        (scream) => scream.screamId === action.payload.screamId\r\n      );\r\n      state.screams[index] = action.payload;\r\n      if (state.scream.screamId === action.payload.screamId) {\r\n        state.scream = action.payload;\r\n      }\r\n      return {\r\n        ...state\r\n      };\r\n    case DELETE_SCREAM:\r\n      index = state.screams.findIndex(\r\n        (scream) => scream.screamId === action.payload\r\n      );\r\n      state.screams.splice(index, 1);\r\n      return {\r\n        ...state\r\n      };\r\n    case POST_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: [action.payload, ...state.screams]\r\n      };\r\n    case SUBMIT_COMMENT:\r\n      return {\r\n        ...state,\r\n        scream: {\r\n          ...state.scream,\r\n          comments: [action.payload, ...state.scream.comments]\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case STOP_LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n  UI: uiReducer\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\n","import {\r\n    SET_USER,\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_UNAUTHENTICATED,\r\n    LOADING_USER,\r\n    MARK_NOTIFICATIONS_READ,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post(\"/login\", userData)\r\n        .then((res) => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post(\"/signup\", newUserData)\r\n        .then((res) => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem(\"FBIdToken\");\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n        .get(\"/user\")\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n        .post(\"/user/image\", formData)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n        .post(\"/user\", userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n    axios\r\n        .post(\"/notifications\", notificationIds)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: MARK_NOTIFICATIONS_READ,\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n    axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\r\n};\r\n","import React from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n);\r\n","import {\r\n  SET_SCREAMS,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  SET_ERRORS,\r\n  POST_SCREAM,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_SCREAM,\r\n  STOP_LOADING_UI,\r\n  SUBMIT_COMMENT\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\n// Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get('/screams')\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: []\r\n      });\r\n    });\r\n};\r\nexport const getScream = (screamId) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .get(`/scream/${screamId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Post a scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/scream', newScream)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: POST_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n// Like a scream\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .get(`/scream/${screamId}/like`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Unlike a scream\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .get(`/scream/${screamId}/unlike`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UNLIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Submit a comment\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n  axios\r\n    .post(`/scream/${screamId}/comment`, commentData)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUBMIT_COMMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get(`/user/${userHandle}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data.screams\r\n      });\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: null\r\n      });\r\n    });\r\n};\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"../../util/MyButton\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    submitButton: {\r\n        position: \"relative\",\r\n        float: \"right\",\r\n        marginTop: 10,\r\n    },\r\n    progressSpinner: {\r\n        position: \"absolute\",\r\n    },\r\n    closeButton: {\r\n        position: \"absolute\",\r\n        left: \"91%\",\r\n        top: \"6%\",\r\n    },\r\n});\r\n\r\nclass PostScream extends Component {\r\n    state = {\r\n        open: false,\r\n        body: \"\",\r\n        errors: {},\r\n    };\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors,\r\n            });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body: \"\", open: false, errors: {} });\r\n        }\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({ open: false, errors: {} });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postScream({ body: this.state.body });\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        const {\r\n            classes,\r\n            UI: { loading },\r\n        } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip=\"Post a Scream!\">\r\n                    <AddIcon />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <MyButton\r\n                        tip=\"Close\"\r\n                        onClick={this.handleClose}\r\n                        tipClassName={classes.closeButton}\r\n                    >\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogTitle>Post a new scream</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                name=\"body\"\r\n                                type=\"text\"\r\n                                label=\"SCREAM!!\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                placeholder=\"Scream at your fellow apes\"\r\n                                error={errors.body ? true : false}\r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submitButton}\r\n                                disabled={loading}\r\n                            >\r\n                                Submit\r\n                                {loading && (\r\n                                    <CircularProgress\r\n                                        size={30}\r\n                                        className={classes.progressSpinner}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { postScream, clearErrors })(\r\n    withStyles(styles)(PostScream)\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n  handleOpen = (event) => {\r\n    this.setState({ anchorEl: event.target });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  onMenuOpened = () => {\r\n    let unreadNotificationsIds = this.props.notifications\r\n      .filter((not) => !not.read)\r\n      .map((not) => not.notificationId);\r\n    this.props.markNotificationsRead(unreadNotificationsIds);\r\n  };\r\n  render() {\r\n    const notifications = this.props.notifications;\r\n    const anchorEl = this.state.anchorEl;\r\n\r\n    dayjs.extend(relativeTime);\r\n\r\n    let notificationsIcon;\r\n    if (notifications && notifications.length > 0) {\r\n      notifications.filter((not) => not.read === false).length > 0\r\n        ? (notificationsIcon = (\r\n            <Badge\r\n              badgeContent={\r\n                notifications.filter((not) => not.read === false).length\r\n              }\r\n              color=\"secondary\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          ))\r\n        : (notificationsIcon = <NotificationsIcon />);\r\n    } else {\r\n      notificationsIcon = <NotificationsIcon />;\r\n    }\r\n    let notificationsMarkup =\r\n      notifications && notifications.length > 0 ? (\r\n        notifications.map((not) => {\r\n          const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n          const time = dayjs(not.createdAt).fromNow();\r\n          const iconColor = not.read ? 'primary' : 'secondary';\r\n          const icon =\r\n            not.type === 'like' ? (\r\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            ) : (\r\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            );\r\n\r\n          return (\r\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n              {icon}\r\n              <Typography\r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n              >\r\n                {not.sender} {verb} your scream {time}\r\n              </Typography>\r\n            </MenuItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <MenuItem onClick={this.handleClose}>\r\n          You have no notifications yet\r\n        </MenuItem>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Notifications\">\r\n          <IconButton\r\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            {notificationsIcon}\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          onEntered={this.onMenuOpened}\r\n        >\r\n          {notificationsMarkup}\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func.isRequired,\r\n  notifications: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.user.notifications\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { markNotificationsRead }\r\n)(Notifications);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport PostScream from \"../scream/PostScream\";\r\nimport Notifications from \"./Notifications\";\r\nimport AppIcon from \"../../images/icon.svg\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    handleOpen = (event) => {\r\n        this.setState({ anchorEl: event.target });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    render() {\r\n        const { authenticated } = this.props;\r\n        const handle = \"Denis\"; //lmao, I'll fix this shit later\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className=\"nav-container\">\r\n                    <Link to=\"/\">\r\n                        <img\r\n                            className=\"appbar-logo\"\r\n                            src={AppIcon}\r\n                            width=\"30\"\r\n                            alt=\"logo\"\r\n                        />\r\n                    </Link>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        component={Link}\r\n                        to=\"/\"\r\n                    >\r\n                        vKPT\r\n                    </Typography>\r\n                    {authenticated ? (\r\n                        <div className=\"nav-buttons\">\r\n                            <Fragment>\r\n                                <PostScream />\r\n                                <Notifications />\r\n                                <Link to=\"/\">\r\n                                    <MyButton tip=\"Home\">\r\n                                        <HomeIcon />\r\n                                    </MyButton>\r\n                                </Link>\r\n                            </Fragment>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"inherit\"\r\n                                onClick={this.handleOpen}\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                <MenuItem onClick={this.handleClose}>\r\n                                    <Typography\r\n                                        component={Link}\r\n                                        color=\"default\"\r\n                                        to={`/users/${handle}`}\r\n                                    >\r\n                                        My profile\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                                <MenuItem onClick={this.handleClose}>\r\n                                    <Typography\r\n                                        component={Link}\r\n                                        color=\"default\"\r\n                                    >\r\n                                        Logout\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"nav-buttons\">\r\n                            <Fragment>\r\n                                <Button\r\n                                    color=\"inherit\"\r\n                                    component={Link}\r\n                                    to=\"/login\"\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                                <Button\r\n                                    color=\"inherit\"\r\n                                    component={Link}\r\n                                    to=\"/signup\"\r\n                                >\r\n                                    Signup\r\n                                </Button>\r\n                                <Button color=\"inherit\" component={Link} to=\"/\">\r\n                                    Home\r\n                                </Button>\r\n                            </Fragment>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            authenticated === true ? (\r\n                <Redirect to=\"/\" />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React, { Component, Fragment } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n  deleteButton: {\r\n    position: 'absolute',\r\n    left: '90%',\r\n    top: '10%'\r\n  }\r\n};\r\n\r\nclass DeleteScream extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  deleteScream = () => {\r\n    this.props.deleteScream(this.props.screamId);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Delete Scream\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.deleteButton}\r\n        >\r\n          <DeleteOutline color=\"secondary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>\r\n            Are you sure you want to delete this scream ?\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.deleteScream} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n  deleteScream: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteScream }\r\n)(withStyles(styles)(DeleteScream));\r\n","import React, { Component } from \"react\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { likeScream, unlikeScream } from \"../../redux/actions/dataActions\";\r\n\r\nexport class LikeButton extends Component {\r\n    likedScream = () => {\r\n        if (\r\n            this.props.user.likes &&\r\n            this.props.user.likes.find(\r\n                (like) => like.screamId === this.props.screamId\r\n            )\r\n        )\r\n            return true;\r\n        else return false;\r\n    };\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    };\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    };\r\n    render() {\r\n        const { authenticated } = this.props.user;\r\n        const likeButton = !authenticated ? (\r\n            <Link to=\"/login\">\r\n                <MyButton tip=\"Like\">\r\n                    <FavoriteBorder color=\"primary\" />\r\n                </MyButton>\r\n            </Link>\r\n        ) : this.likedScream() ? (\r\n            <MyButton tip=\"Undo like\" onClick={this.unlikeScream}>\r\n                <FavoriteIcon color=\"primary\" />\r\n            </MyButton>\r\n        ) : (\r\n            <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n                <FavoriteBorder color=\"primary\" />\r\n            </MyButton>\r\n        );\r\n        return likeButton;\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    likeScream,\r\n    unlikeScream,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n// MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme,\r\n  commentImage: {\r\n    maxWidth: '100%',\r\n    height: 100,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n  },\r\n  commentData: {\r\n    marginLeft: 20\r\n  }\r\n});\r\n\r\nclass Comments extends Component {\r\n  render() {\r\n    const { comments, classes } = this.props;\r\n    return (\r\n      <Grid container>\r\n        {comments.map((comment, index) => {\r\n          const { body, createdAt, userImage, userHandle } = comment;\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={12}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={userImage}\r\n                      alt=\"comment\"\r\n                      className={classes.commentImage}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className={classes.commentData}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {userHandle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeparator} />\r\n                      <Typography variabnt=\"body1\">{body}</Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {index !== comments.length - 1 && (\r\n                <hr className={classes.visibleSeparator} />\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme\r\n});\r\n\r\nclass CommentForm extends Component {\r\n  state = {\r\n    body: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '' });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n  };\r\n\r\n  render() {\r\n    const { classes, authenticated } = this.props;\r\n    const errors = this.state.errors;\r\n\r\n    const commentFormMarkup = authenticated ? (\r\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            name=\"body\"\r\n            type=\"text\"\r\n            label=\"Comment on scream\"\r\n            error={errors.comment ? true : false}\r\n            helperText={errors.comment}\r\n            value={this.state.body}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            className={classes.textField}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <hr className={classes.visibleSeparator} />\r\n      </Grid>\r\n    ) : null;\r\n    return commentFormMarkup;\r\n  }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  submitComment: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitComment }\r\n)(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI Stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme,\r\n  profileImage: {\r\n    maxWidth: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    objectFit: 'cover'\r\n  },\r\n  dialogContent: {\r\n    padding: 20\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  expandButton: {\r\n    position: 'absolute',\r\n    left: '90%'\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 50\r\n  }\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: '',\r\n    newPath: ''\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      this.handleOpen();\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname;\r\n\r\n    const { userHandle, screamId } = this.props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\r\n\r\n    window.history.pushState(null, null, newPath);\r\n\r\n    this.setState({ open: true, oldPath, newPath });\r\n    this.props.getScream(this.props.screamId);\r\n  };\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath);\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      scream: {\r\n        screamId,\r\n        body,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImage,\r\n        userHandle,\r\n        comments\r\n      },\r\n      UI: { loading }\r\n    } = this.props;\r\n\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={16}>\r\n        <Grid item sm={5}>\r\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n            to={`/users/${userHandle}`}\r\n          >\r\n            @{userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} likes</span>\r\n          <MyButton tip=\"comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} comments</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator} />\r\n        <CommentForm screamId={screamId} />\r\n        <Comments comments={comments} />\r\n      </Grid>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          onClick={this.handleOpen}\r\n          tip=\"Expand scream\"\r\n          tipClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  clearErrors: PropTypes.func.isRequired,\r\n  getScream: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));\r\n","import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport DeleteScream from \"./DeleteScream\";\r\nimport ScreamDialog from \"./ScreamDialog\";\r\nimport LikeButton from \"./LikeButton\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = {\r\n    card: {\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: \"cover\",\r\n    },\r\n};\r\n\r\nclass Scream extends Component {\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const {\r\n            classes,\r\n            scream: {\r\n                body,\r\n                createdAt,\r\n                userImage,\r\n                userHandle,\r\n                screamId,\r\n                likeCount,\r\n                commentCount,\r\n            },\r\n            user: {\r\n                authenticated,\r\n                credentials: { handle },\r\n            },\r\n        } = this.props;\r\n\r\n        const deleteButton =\r\n            authenticated && userHandle === handle ? (\r\n                <DeleteScream screamId={screamId} />\r\n            ) : null;\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    image={userImage}\r\n                    title=\"Profile image\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                    >\r\n                        {userHandle}\r\n                    </Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).fromNow()}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">{body}</Typography>\r\n                    <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip=\"comments\">\r\n                        <ChatIcon color=\"primary\" />\r\n                    </MyButton>\r\n                    <span>{commentCount} comments</span>\r\n                    <ScreamDialog\r\n                        screamId={screamId}\r\n                        userHandle={userHandle}\r\n                        openDialog={this.props.openDialog}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"../../util/MyButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editUserDetails } from \"../../redux/actions/userActions\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    button: {\r\n        float: \"right\",\r\n    },\r\n});\r\n\r\nclass EditDetails extends Component {\r\n    state = {\r\n        bio: \"\",\r\n        website: \"\",\r\n        location: \"\",\r\n        open: false,\r\n    };\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : \"\",\r\n            website: credentials.website ? credentials.website : \"\",\r\n            location: credentials.location ? credentials.location : \"\",\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location,\r\n        };\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    };\r\n    \r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton\r\n                    tip=\"Edit Details\"\r\n                    onClick={this.handleOpen}\r\n                    btnClassName={classes.button}\r\n                >\r\n                    <EditIcon color=\"primary\" />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                >\r\n                    <DialogTitle>Edit your details</DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField\r\n                                name=\"bio\"\r\n                                tpye=\"text\"\r\n                                label=\"Bio\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                placeholder=\"A short bio about yourself\"\r\n                                className={classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name=\"website\"\r\n                                tpye=\"text\"\r\n                                label=\"Website\"\r\n                                placeholder=\"Your personal/professinal website\"\r\n                                className={classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name=\"location\"\r\n                                tpye=\"text\"\r\n                                label=\"Location\"\r\n                                placeholder=\"Where you live\"\r\n                                className={classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleSubmit} color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(\r\n    withStyles(styles)(EditDetails)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport NoImg from \"../images/no-img.png\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    handle: {\r\n        height: 20,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: 60,\r\n        margin: \"0 auto 7px auto\",\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        backgroundColor: \"rgba(0,0,0,0.6)\",\r\n        width: \"100%\",\r\n        marginBottom: 10,\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        backgroundColor: \"rgba(0,0,0,0.6)\",\r\n        width: \"50%\",\r\n        marginBottom: 10,\r\n    },\r\n});\r\n\r\nconst ProfileSkeleton = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.handle} />\r\n                    <hr />\r\n                    <div className={classes.fullLine} />\r\n                    <div className={classes.fullLine} />\r\n                    <hr />\r\n                    <LocationOn color=\"primary\" /> <span>Location</span>\r\n                    <hr />\r\n                    <LinkIcon color=\"primary\" /> https://website.com\r\n                    <hr />\r\n                    <CalendarToday color=\"primary\" /> Joined date\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nProfileSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport EditDetails from \"./EditDetails\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport ProfileSkeleton from \"../../util/ProfileSkeleton\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n});\r\n\r\nclass Profile extends Component {\r\n    handleImageChange = (event) => {\r\n        const image = event.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image, image.name);\r\n        this.props.uploadImage(formData);\r\n    };\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById(\"imageInput\");\r\n        fileInput.click();\r\n    };\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    };\r\n    render() {\r\n        const {\r\n            classes,\r\n            user: {\r\n                credentials: {\r\n                    handle,\r\n                    createdAt,\r\n                    imageUrl,\r\n                    bio,\r\n                    website,\r\n                    location,\r\n                },\r\n                loading,\r\n                authenticated,\r\n            },\r\n        } = this.props;\r\n\r\n        let profileMarkup = !loading ? (\r\n            authenticated ? (\r\n                <Paper className={classes.paper}>\r\n                    <div className={classes.profile}>\r\n                        <div className=\"image-wrapper\">\r\n                            <img\r\n                                src={imageUrl}\r\n                                alt=\"profile\"\r\n                                className=\"profile-image\"\r\n                            />\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"imageInput\"\r\n                                hidden=\"hidden\"\r\n                                onChange={this.handleImageChange}\r\n                            />\r\n                            <MyButton\r\n                                tip=\"Edit profile picture\"\r\n                                onClick={this.handleEditPicture}\r\n                                btnClassName=\"button\"\r\n                            >\r\n                                <EditIcon color=\"primary\" />\r\n                            </MyButton>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"profile-details\">\r\n                            <MuiLink\r\n                                component={Link}\r\n                                to={`/users/${handle}`}\r\n                                color=\"primary\"\r\n                                variant=\"h5\"\r\n                            >\r\n                                @{handle}\r\n                            </MuiLink>\r\n                            <hr />\r\n                            {bio && (\r\n                                <Typography variant=\"body2\">{bio}</Typography>\r\n                            )}\r\n                            <hr />\r\n                            {location && (\r\n                                <Fragment>\r\n                                    <LocationOn color=\"primary\" />{\" \"}\r\n                                    <span>{location}</span>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            )}\r\n                            {website && (\r\n                                <Fragment>\r\n                                    <LinkIcon color=\"primary\" />\r\n                                    <a\r\n                                        href={website}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        {\" \"}\r\n                                        {website}\r\n                                    </a>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            )}\r\n                            <CalendarToday color=\"primary\" />{\" \"}\r\n                            <span>\r\n                                Joined {dayjs(createdAt).format(\"MMM YYYY\")}\r\n                            </span>\r\n                        </div>\r\n                        <MyButton tip=\"Logout\" onClick={this.handleLogout}>\r\n                            <KeyboardReturn color=\"primary\" />\r\n                        </MyButton>\r\n                        <EditDetails />\r\n                    </div>\r\n                </Paper>\r\n            ) : (\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"body2\" align=\"center\">\r\n                        No profile found, please login again\r\n                    </Typography>\r\n                    <div className={classes.buttons}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component={Link}\r\n                            to=\"/login\"\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            component={Link}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Button>\r\n                    </div>\r\n                </Paper>\r\n            )\r\n        ) : (\r\n            <ProfileSkeleton />\r\n        );\r\n\r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = { logoutUser, uploadImage };\r\n\r\nProfile.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from \"react\";\r\nimport NoImg from \"../images/no-img.png\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n    card: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n    },\r\n    cardContent: {\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n        padding: 25,\r\n    },\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: \"cover\",\r\n    },\r\n    handle: {\r\n        width: 60,\r\n        height: 18,\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginBottom: 7,\r\n    },\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: \"rgba(0,0,0, 0.3)\",\r\n        marginBottom: 10,\r\n    },\r\n    fullLine: {\r\n        height: 15,\r\n        width: \"90%\",\r\n        backgroundColor: \"rgba(0,0,0, 0.6)\",\r\n        marginBottom: 10,\r\n    },\r\n    halfLine: {\r\n        height: 15,\r\n        width: \"50%\",\r\n        backgroundColor: \"rgba(0,0,0, 0.6)\",\r\n        marginBottom: 10,\r\n    },\r\n});\r\n\r\nconst ScreamSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const content = Array.from({ length: 5 }).map((item, index) => (\r\n        <Card className={classes.card} key={index}>\r\n            <CardMedia className={classes.cover} image={NoImg} />\r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.handle} />\r\n                <div className={classes.date} />\r\n                <div className={classes.fullLine} />\r\n                <div className={classes.fullLine} />\r\n                <div className={classes.halfLine} />\r\n            </CardContent>\r\n        </Card>\r\n    ));\r\n\r\n    return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nScreamSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScreamSkeleton);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getScreams } from \"../redux/actions/dataActions\";\r\n\r\nclass home extends Component {\r\n    componentDidMount() {\r\n        this.props.getScreams();\r\n    }\r\n    render() {\r\n        const { screams, loading } = this.props.data;\r\n        let recentScreamsMarkup = !loading ? (\r\n            screams.map((scream) => (\r\n                <Scream key={scream.screamId} scream={scream} />\r\n            ))\r\n        ) : (\r\n            <ScreamSkeleton />\r\n        );\r\n        return (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile position=\"fixed\" />\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentScreamsMarkup}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nhome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppIcon from \"../images/icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n});\r\n\r\nclass login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        this.props.loginUser(userData, this.props.history);\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            classes,\r\n            UI: { loading },\r\n        } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img\r\n                        src={AppIcon}\r\n                        alt=\"logo\"\r\n                        className={classes.image}\r\n                        width=\"200px\"\r\n                    />\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Login\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                className={classes.customError}\r\n                            >\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Login\r\n                            {loading && (\r\n                                <CircularProgress\r\n                                    size={30}\r\n                                    className={classes.progress}\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>\r\n                            dont have an account ? sign up{\" \"}\r\n                            <Link to=\"/signup\">here</Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(login));\r\n","import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppIcon from \"../images/icon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n});\r\n\r\nclass signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            handle: \"\",\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle,\r\n        };\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            classes,\r\n            UI: { loading },\r\n        } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img\r\n                        src={AppIcon}\r\n                        alt=\"monkey\"\r\n                        className={classes.image}\r\n                        width=\"200px\"\r\n                    />\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        SignUp\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            label=\"Confirm Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"handle\"\r\n                            name=\"handle\"\r\n                            type=\"text\"\r\n                            label=\"Handle\"\r\n                            className={classes.textField}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                className={classes.customError}\r\n                            >\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            SignUp\r\n                            {loading && (\r\n                                <CircularProgress\r\n                                    size={30}\r\n                                    className={classes.progress}\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>\r\n                            Already have an account ? Login{\" \"}\r\n                            <Link to=\"/login\">here</Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupUser })(\r\n    withStyles(styles)(signup)\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\n\r\nconst styles = (theme) => ({\r\n    ...theme,\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n    const {\r\n        classes,\r\n        profile: { handle, createdAt, imageUrl, bio, website, location },\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt=\"profile\"\r\n                        className=\"profile-image\"\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"profile-details\">\r\n                    <MuiLink\r\n                        component={Link}\r\n                        to={`/users/${handle}`}\r\n                        color=\"primary\"\r\n                        variant=\"h5\"\r\n                    >\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                    <hr />\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOn color=\"primary\" />{\" \"}\r\n                            <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color=\"primary\" />\r\n                            <a\r\n                                href={website}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                {\" \"}\r\n                                {website}\r\n                            </a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color=\"primary\" />{\" \"}\r\n                    <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport StaticProfile from \"../components/profile/StaticProfile\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\r\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getUserData } from \"../redux/actions/dataActions\";\r\n\r\nclass user extends Component {\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null,\r\n    };\r\n    componentDidMount() {\r\n        const handle = this.props.match.params.handle;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if (screamId) this.setState({ screamIdParam: screamId });\r\n\r\n        this.props.getUserData(handle);\r\n        axios\r\n            .get(`/user/${handle}`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    profile: res.data.user,\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n    render() {\r\n        const { screams, loading } = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <ScreamSkeleton />\r\n        ) : screams === null ? (\r\n            <p>No screams from this user</p>\r\n        ) : !screamIdParam ? (\r\n            screams.map((scream) => (\r\n                <Scream key={scream.screamId} scream={scream} />\r\n            ))\r\n        ) : (\r\n            screams.map((scream) => {\r\n                if (scream.screamId !== screamIdParam)\r\n                    return <Scream key={scream.screamId} scream={scream} />;\r\n                else\r\n                    return (\r\n                        <Scream\r\n                            key={scream.screamId}\r\n                            scream={scream}\r\n                            openDialog\r\n                        />\r\n                    );\r\n            })\r\n        );\r\n\r\n        return (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton />\r\n                    ) : (\r\n                        <StaticProfile profile={this.state.profile} />\r\n                    )}\r\n                </Grid>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserData })(user);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { SET_AUTHENTICATED } from \"./redux/types\";\r\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport themeObject from \"./util/theme\";\r\nimport AuthRoute from \"./util/AuthRoute\";\r\n\r\nimport home from \"./pages/home\";\r\nimport login from \"./pages/login\";\r\nimport signup from \"./pages/signup\";\r\nimport user from \"./pages/user\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst theme = createMuiTheme(themeObject);\r\n\r\naxios.defaults.baseURL =\r\n    \"https://europe-west1-socialape-d081e.cloudfunctions.net/api\";\r\n\r\nconst token = localStorage.FBIdToken;\r\nif (token) {\r\n    const decodedToken = jwtDecode(token);\r\n    if (decodedToken.exp * 1000 < Date.now()) {\r\n        store.dispatch(logoutUser());\r\n        window.location.href = \"/login\";\r\n    } else {\r\n        store.dispatch({ type: SET_AUTHENTICATED });\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n        store.dispatch(getUserData());\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <Provider store={store}>\r\n                    <Router>\r\n                        <Navbar />\r\n                        <div className=\"container\">\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={home} />\r\n                                <AuthRoute\r\n                                    exact\r\n                                    path=\"/login\"\r\n                                    component={login}\r\n                                />\r\n                                <AuthRoute\r\n                                    exact\r\n                                    path=\"/signup\"\r\n                                    component={signup}\r\n                                />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/users/:handle\"\r\n                                    component={user}\r\n                                />\r\n                                <Route\r\n                                    exact\r\n                                    path=\"/users/:handle/scream/:screamId\"\r\n                                    component={user}\r\n                                />\r\n                            </Switch>\r\n                        </div>\r\n                    </Router>\r\n                </Provider>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n    palette: {\r\n        primary: {\r\n            light: \"#243341\",\r\n            main: \"#34495e\",\r\n            dark: \"#5c6d7e\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            light: \"#ff6333\",\r\n            main: \"#ff3d00\",\r\n            dark: \"#b22a00\",\r\n            contrastText: \"#fff\",\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    form: {\r\n        textAlign: \"center\",\r\n    },\r\n    image: {\r\n        margin: \"20px auto 20px auto\",\r\n    },\r\n    pageTitle: {\r\n        margin: \"10px auto 10px auto\",\r\n    },\r\n    textField: {\r\n        margin: \"10px auto 10px auto\",\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: \"relative\",\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        fontSize: \"0.8rem\",\r\n        marginTop: 10,\r\n    },\r\n    progress: {\r\n        position: \"absolute\",\r\n    },\r\n    invisibleSeparator: {\r\n        border: \"none\",\r\n        margin: 4,\r\n    },\r\n    visibleSeparator: {\r\n        width: \"100%\",\r\n        borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n        marginBottom: 20,\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n    },\r\n    profile: {\r\n        \"& .image-wrapper\": {\r\n            textAlign: \"center\",\r\n            position: \"relative\",\r\n            \"& button\": {\r\n                position: \"absolute\",\r\n                top: \"80%\",\r\n                left: \"70%\",\r\n            },\r\n        },\r\n        \"& .profile-image\": {\r\n            width: 200,\r\n            height: 200,\r\n            objectFit: \"cover\",\r\n            maxWidth: \"100%\",\r\n            borderRadius: \"50%\",\r\n        },\r\n        \"& .profile-details\": {\r\n            textAlign: \"center\",\r\n            \"& span, svg\": {\r\n                verticalAlign: \"middle\",\r\n            },\r\n            \"& a\": {\r\n                color: \"#00bcd4\",\r\n            },\r\n        },\r\n        \"& hr\": {\r\n            border: \"none\",\r\n            margin: \"0 0 10px 0\",\r\n        },\r\n        \"& svg.button\": {\r\n            \"&:hover\": {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n    },\r\n    buttons: {\r\n        textAlign: \"center\",\r\n        \"& a\": {\r\n            margin: \"20px 10px\",\r\n        },\r\n    },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.eaef9d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-img.6732bd42.png\";"],"sourceRoot":""}